{"version":3,"file":"lottieAnimationView.component.js","sources":["../../../src/lottieAnimationView.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAe,MAAA,EAAQ,YAAA,EAAc,SAAA,EAAuB,WAAA,EAAa,MAAA,EAAO,MAAO,eAAA,CAAgB;AAC3H,OAAO,EAAE,gBAAA,EAAiB,MAAO,iBAAA,CAAkB;;;;;;AAGnD,IAAM,MAAA,GAAc,OAAA,CAAQ,mCAAC,CAAmC,CAAC;AAIjE;AAAmD,IAE/C,sCAAqB,UAAkB;AAC3C,QADyB,eAAU,GAAV,UAAU,CAAQ;AAAE,QAMxC,gBAAW,GAAQ,IAAI,YAAY,EAAE,CAAC;AAE3C,IAR8C,CAAC;AAE/C,IAYI,+CAAQ,GAAR;AACF,QACM,EAAE,CAAA,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,CAAC;AAAE,YAAF,MAAM,CAAC;AACrD,QADqD,CAAC;AACrD,QACO,IAAI,CAAC,QAAQ,GAAG;AACvB,YAAW,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;AACrD,YAAW,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK;AACnD,YAAW,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK;AAC5C,YAAW,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,KAAK;AACpD,YAAW,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,KAAK,KAAK;AACpE,YAAW,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;AACpD,YAAW,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;AACxC,YAAW,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,EAAE;AAChE,SAAQ,CAAC;AAEV,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,MAAM,CAAC;AACpD,QAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,MAAM,CAAC;AAEvD,QAAQ,IAAI,IAAI,GAAQ,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3D,QAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,IAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACL;AAAE,IAmBF,mCAAC;AAAD,CAxDA,AAwDC;AAEG,wCAdF;AAPK,AAQP,kBAAkB;mBARD,GAA0B,OAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,vDAQnB,2CAAc,GAAmE,cAAM,OAAA;IAP1F,QAAQ,EAAE,uBAAuB,mBACjC,QAAQ,EAAE,lEAOb,IAAD,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAG,EAAC;AACzE,CAAA,EAF6F,CAE7F,CAAC;AACK,2CAAc,GAA2C;AAC/D,IAAD,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC5B,IAAD,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;2BATL,3BAUrB,IAAD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;OAT3B,EAAG,EAAE,IACL,fASA,IAAD,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;AACjC,IAAD,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,cAAc,EAAG,EAAE,EAAE;AAC/D,CAAA,CAAC;AACD","sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter, ViewChild, ElementRef, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\ndeclare let require: any;\nconst lottie: any = require('lottie-web/build/player/lottie.js');\n\n\n\nexport class LottieAnimationViewComponent implements OnInit {\n    \n    constructor( private platformId: string) {}\n\n     options: any;\n     width: number;\n     height: number;\n\n     animCreated: any = new EventEmitter();\n\n     lavContainer: ElementRef;\n\n    public viewWidth: string;\n    public viewHeight: string;\n    private _options: any;\n\n    ngOnInit() {\n        \n        if(isPlatformServer(this.platformId)){return;}\n        \n        this._options = {\n            container: this.lavContainer.nativeElement,\n            renderer: this.options.renderer || 'svg',\n            loop: this.options.loop !== false,\n            autoplay: this.options.autoplay !== false,\n            autoloadSegments: this.options.autoloadSegments !== false,\n            animationData: this.options.animationData,\n            path: this.options.path || '',\n            rendererSettings: this.options.rendererSettings || {}\n        };\n\n        this.viewWidth = this.width + 'px' || '100%';\n        this.viewHeight = this.height + 'px' || '100%';\n\n        let anim: any = lottie.loadAnimation(this._options);\n        this.animCreated.emit(anim);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'lottie-animation-view',\n    template: `<div #lavContainer \n                    [ngStyle]=\"{'width': viewWidth, 'height': viewHeight, 'overflow':'hidden', 'margin': '0 auto'}\">    \n               </div>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'animCreated': [{ type: Output },],\n'lavContainer': [{ type: ViewChild, args: ['lavContainer', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}